name: Deploy Frontend Files

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'

  workflow_dispatch:

  workflow_run:
    workflows: ["Frontend Infrastructure"]
    types:
      - completed

jobs:
  deploy-frontend-files:
    name: Deploy Website Files
    runs-on: ubuntu-latest
    env:
      STORAGE_ACCOUNT_NAME: zchresumestrfrontend
      CDN_ENDPOINT_NAME: shecodesclouds
      CDN_PROFILE_NAME: resume-cdn-profile
      RESOURCE_GROUP_NAME: resume-frontend-rg

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Deploy to Azure Storage
        run: |
          # Get storage account name
          cd iaac
          terraform init -input=false -no-color > /dev/null

          # Execute terraform and capture the output correctly
          STORAGE_ACCOUNT=$(terraform output -raw storage_account_name 2>/dev/null | head -n1 | tr -d '\n' || echo "")
          
          # Fallback if empty
          if [[ -z "$STORAGE_ACCOUNT" ]]; then
            echo "Using fallback storage account name"
            STORAGE_ACCOUNT="zchresumestrfrontend"
          fi
          
          echo "Storage account name: ${STORAGE_ACCOUNT}"

          # Go back to root directory
          cd ..
          
          # Upload files with proper authentication
          echo "ðŸ“¤ Uploading website files to storage account: ${STORAGE_ACCOUNT}"
          
          az storage blob upload-batch \
            --account-name "${STORAGE_ACCOUNT}" \
            --auth-mode login \
            --source ./frontend \
            --destination '$web' \
            --overwrite
          
      - name: Get CDN Details
        id: get-cdn
        run: |
          cd iaac
          terraform init -input=false -no-color > /dev/null
          CDN_ENDPOINT=$(terraform output -raw cdn_endpoint_name 2>/dev/null || true)
          CDN_PROFILE=$(terraform output -raw cdn_profile_name 2>/dev/null || true)

          if [[ -z "$CDN_ENDPOINT" ]]; then CDN_ENDPOINT="shecodesclouds"; fi
          if [[ -z "$CDN_PROFILE" ]]; then CDN_PROFILE="resume-cdn-profile"; fi

          echo "cdn_endpoint=${CDN_ENDPOINT}" >> $GITHUB_OUTPUT
          echo "cdn_profile=${CDN_PROFILE}" >> $GITHUB_OUTPUT


      - name: Purge CDN Cache
        run: |
          echo "ðŸ”„ Purging CDN cache..."

          az cdn endpoint purge \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --profile-name ${{ steps.get-cdn.outputs.cdn_profile }} \
            --name ${{ steps.get-cdn.outputs.cdn_endpoint }} \
            --content-paths "/*" \
            --no-wait

      - name: Deployment Summary
        run: |
          echo "### Frontend Deployed! ðŸŽ¨" >> $GITHUB_STEP_SUMMARY
          echo "- **Files uploaded to**: ${{ steps.get-storage.outputs.storage_account }}" >> $GITHUB_STEP_SUMMARY
          echo "- **CDN URL**: https://${{ steps.get-cdn.outputs.cdn_endpoint }}.azureedge.net" >> $GITHUB_STEP_SUMMARY
          echo "- **Note**: CDN cache purge initiated â€“ changes should be live in 2â€“10 minutes." >> $GITHUB_STEP_SUMMARY
