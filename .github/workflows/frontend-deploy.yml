name: Deploy Frontend Files

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'

  workflow_dispatch:

  workflow_run:
    workflows: ["Frontend Infrastructure"]
    types:
      - completed

jobs:
  deploy-frontend-files:
    name: Deploy Website Files
    runs-on: ubuntu-latest
    env:
      STORAGE_ACCOUNT_NAME: zchresumestrfrontend
      CDN_ENDPOINT_NAME: shecodesclouds
      CDN_PROFILE_NAME: resume-cdn-profile
      RESOURCE_GROUP_NAME: resume-frontend-rg

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # --- Security Scanning Steps Start ---

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM for Frontend
        run: syft frontend -o json > sbom.json

      - name: Upload SBOM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-frontend
          path: sbom.json

      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Run Grype Vulnerability Scan
        run: |
          grype sbom:sbom.json -o table --fail-on medium

      - name: Run Gitleaks Secret Scan
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "--verbose --redact"
      
          

  dependency-scan:
    name: Scan JavaScript Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'  

      - name: Install dependencies
        run: npm install
        working-directory: .  

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        working-directory: frontend
    
      # --- Security Scanning Steps End ---

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Storage
        id: deploy-storage
        run: |
          echo "ðŸ“¤ Uploading website files to storage account: ${STORAGE_ACCOUNT_NAME}"
          az storage blob upload-batch \
            --account-name "${STORAGE_ACCOUNT_NAME}" \
            --auth-mode key \
            --source ./frontend \
            --destination '$web' \
            --overwrite
          echo "storage_account=${STORAGE_ACCOUNT_NAME}" >> $GITHUB_OUTPUT

      - name: Purge CDN Cache
        run: |
          echo "ðŸ”„ Purging CDN cache..."
          az cdn endpoint purge \
            --resource-group "${RESOURCE_GROUP_NAME}" \
            --profile-name "${CDN_PROFILE_NAME}" \
            --name "${CDN_ENDPOINT_NAME}" \
            --content-paths "/*" \
            --no-wait

      - name: Deployment Summary
        run: |
          echo "### Frontend Deployed! ðŸŽ¨" >> $GITHUB_STEP_SUMMARY
          echo "- **Files uploaded to**: ${{ steps.deploy-storage.outputs.storage_account }}" >> $GITHUB_STEP_SUMMARY
          echo "- **CDN URL**: https://${CDN_ENDPOINT_NAME}.azureedge.net" >> $GITHUB_STEP_SUMMARY
          echo "- **Note**: CDN cache purge initiated - changes should be live in 2-10 minutes." >> $GITHUB_STEP_SUMMARY
